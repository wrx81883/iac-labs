name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Job 1: Build
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: build-group

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
        poetry --version

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: example-app/.venv
        key: ${{ runner.os }}-venv

    - name: Install dependencies
      run: |
        cd iac-labs/example-app/
        poetry install --no-root

  # Job 2: Lint
  lint:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: lint-group

    steps:
    - uses: actions/checkout@v4
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
        poetry --version

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: example-app/.venv
        key: ${{ runner.os }}-venv

    - name: Run linter
      run: |
        cd example-app/
        poetry run flake8 .

  # Job 3: Formatter
  formatter:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: formatter-group

    steps:
    - uses: actions/checkout@v4
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
        poetry --version

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: example-app/.venv
        key: ${{ runner.os }}-venv

    - name: Run formatter
      run: |
        cd example-app/
        poetry run black .

  # Job 4: Security
  security:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: security-group

    steps:
    - uses: actions/checkout@v4
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
        poetry --version

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: example-app/.venv
        key: ${{ runner.os }}-venv

    - name: Security checks
      run: |
        cd example-app/
        poetry run bandit -r .

  # Job 5: Unit tests
  unittests:
    runs-on: ubuntu-latest
    needs: [lint, formatter, security]
    concurrency:
      group: unittests-group

    steps:
    - uses: actions/checkout@v4
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
        poetry --version

    - name: Cache build venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: example-app/.venv
        key: ${{ runner.os }}-venv

    - name: Run unit tests
      run: |
        cd example-app/
        poetry run pytest
